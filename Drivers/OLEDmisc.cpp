#include "OLEDmisc.h"

#define DC 		0
#define RESET 	1
#define VBATC 	2
#define VDDC 	3

#define First_char_ascii_code 32
#define Char_Verticle_Pages_Required 2
#define Columns 14
#define No_of_bytes_Char 29



OLEDGpoCore oled(get_slot_addr(BRIDGE_BASE, S4_USER));
SpiCore spi(get_slot_addr(BRIDGE_BASE, S9_SPI));
SpiCore Oledspi(get_slot_addr(BRIDGE_BASE, S14_SPI));

const unsigned short data2[] = {
        0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char
        0x04, 0x00, 0x00, 0x7E, 0x03, 0x7E, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char !
        0x07, 0x20, 0x00, 0x3E, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x1E, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char "
        0x09, 0xC0, 0x00, 0xD8, 0x03, 0xFC, 0x03, 0xFE, 0x00, 0xDA, 0x00, 0xF8, 0x03, 0xFE, 0x03, 0xDE, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char #
        0x08, 0x00, 0x01, 0x9C, 0x01, 0xBE, 0x01, 0x36, 0x03, 0xFF, 0x07, 0x76, 0x03, 0xEE, 0x01, 0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char $
        0x0B, 0x1C, 0x00, 0x3E, 0x02, 0x36, 0x03, 0xBE, 0x01, 0xDC, 0x00, 0x70, 0x00, 0xD8, 0x01, 0xEC, 0x03, 0x66, 0x03, 0xE2, 0x03, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char %
        0x09, 0x00, 0x00, 0xC0, 0x01, 0xFC, 0x03, 0x3E, 0x03, 0x66, 0x03, 0xDE, 0x03, 0xDC, 0x01, 0xE0, 0x03, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char &
        0x03, 0x20, 0x00, 0x3E, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char '
        0x05, 0x00, 0x00, 0xF0, 0x01, 0xFC, 0x07, 0x0C, 0x06, 0x06, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char (
        0x05, 0x00, 0x00, 0x06, 0x0C, 0x0C, 0x06, 0xFC, 0x07, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char )
        0x05, 0x08, 0x00, 0x14, 0x00, 0x3E, 0x00, 0x1C, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char *
        0x07, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0xFC, 0x01, 0xFC, 0x01, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char +
        0x03, 0x00, 0x08, 0x00, 0x0F, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ,
        0x05, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char -
        0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char .
        0x07, 0x00, 0x0C, 0x00, 0x0F, 0xC0, 0x03, 0xF0, 0x00, 0x3C, 0x00, 0x0F, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char /
        0x08, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x8E, 0x03, 0x06, 0x03, 0x8E, 0x03, 0xFC, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 0
        0x04, 0x0C, 0x00, 0x06, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 1
        0x07, 0x08, 0x03, 0x8C, 0x03, 0x8E, 0x03, 0xC6, 0x03, 0x66, 0x03, 0x3E, 0x03, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 2
        0x07, 0x00, 0x01, 0x86, 0x03, 0x36, 0x03, 0x36, 0x03, 0x3E, 0x03, 0xEE, 0x03, 0xE6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 3
        0x08, 0xC0, 0x00, 0xE0, 0x00, 0xF0, 0x00, 0xD8, 0x00, 0xCE, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 4
        0x07, 0x00, 0x01, 0xBE, 0x03, 0x3E, 0x03, 0x36, 0x03, 0x36, 0x03, 0xF6, 0x03, 0xE6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 5
        0x08, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x3E, 0x03, 0x36, 0x03, 0x36, 0x03, 0xFE, 0x03, 0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 6
        0x08, 0x00, 0x00, 0x06, 0x02, 0x86, 0x03, 0xE6, 0x03, 0xF6, 0x00, 0x7E, 0x00, 0x1E, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 7
        0x08, 0x00, 0x00, 0xEC, 0x01, 0xFE, 0x03, 0x36, 0x03, 0x36, 0x03, 0x3E, 0x03, 0xEC, 0x03, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 8
        0x08, 0x00, 0x00, 0x3C, 0x01, 0xFE, 0x03, 0x66, 0x03, 0x66, 0x03, 0x66, 0x03, 0xFC, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char 9
        0x03, 0x00, 0x00, 0x18, 0x03, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char :
        0x03, 0x00, 0x08, 0x18, 0x0F, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ;
        0x07, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0x8C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char <
        0x07, 0x00, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char =
        0x08, 0x00, 0x00, 0x8C, 0x01, 0xD8, 0x00, 0xD8, 0x00, 0xD8, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char >
        0x07, 0x00, 0x00, 0x04, 0x00, 0x0E, 0x03, 0x66, 0x03, 0x76, 0x00, 0x3E, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ?
        0x0C, 0xF0, 0x01, 0x18, 0x02, 0x04, 0x04, 0xF6, 0x04, 0xFA, 0x09, 0x9A, 0x09, 0x9A, 0x08, 0xFA, 0x08, 0xFA, 0x09, 0x14, 0x05, 0x08, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char @
        0x0A, 0x00, 0x02, 0x80, 0x03, 0xF0, 0x03, 0xFC, 0x00, 0xDE, 0x00, 0xCE, 0x00, 0xFE, 0x00, 0xF0, 0x03, 0xC0, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char A
        0x09, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x36, 0x03, 0x36, 0x03, 0x36, 0x03, 0x3E, 0x03, 0xEC, 0x03, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char B
        0x09, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x8E, 0x03, 0x06, 0x03, 0x06, 0x03, 0x06, 0x03, 0x8E, 0x03, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char C
        0x09, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x06, 0x03, 0x06, 0x03, 0x06, 0x03, 0x8E, 0x03, 0xFC, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char D
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x36, 0x03, 0x36, 0x03, 0x36, 0x03, 0x36, 0x03, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char E
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char F
        0x09, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x8E, 0x03, 0x06, 0x03, 0x66, 0x03, 0x66, 0x03, 0xEE, 0x03, 0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char G
        0x09, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char H
        0x03, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char I
        0x06, 0x00, 0x01, 0x80, 0x03, 0x00, 0x03, 0x00, 0x03, 0xFE, 0x03, 0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char J
        0x09, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x70, 0x00, 0x78, 0x00, 0xFC, 0x01, 0xCE, 0x03, 0x06, 0x03, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char K
        0x07, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char L
        0x0A, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x3E, 0x00, 0x78, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x3E, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char M
        0x09, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x3E, 0x00, 0x78, 0x00, 0xF0, 0x00, 0xE0, 0x03, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char N
        0x0A, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x8E, 0x03, 0x06, 0x03, 0x06, 0x03, 0x06, 0x03, 0x8E, 0x03, 0xFC, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char O
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x66, 0x00, 0x66, 0x00, 0x66, 0x00, 0x3E, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char P
        0x0A, 0x00, 0x00, 0xF8, 0x00, 0xFC, 0x01, 0x8E, 0x03, 0x06, 0x03, 0x46, 0x03, 0xE6, 0x03, 0xCE, 0x03, 0xFC, 0x03, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char Q
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x66, 0x00, 0xE6, 0x00, 0xE6, 0x01, 0xFE, 0x03, 0x3C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char R
        0x08, 0x80, 0x01, 0x9C, 0x03, 0x3E, 0x03, 0x36, 0x03, 0x76, 0x03, 0xE6, 0x03, 0xCE, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char S
        0x08, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x06, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char T
        0x09, 0x00, 0x00, 0xFE, 0x00, 0xFE, 0x01, 0x80, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0xFE, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char U
        0x0A, 0x02, 0x00, 0x0E, 0x00, 0x7E, 0x00, 0xF8, 0x01, 0xE0, 0x03, 0xE0, 0x03, 0xFC, 0x01, 0x7E, 0x00, 0x0E, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char V
        0x0E, 0x02, 0x00, 0x1E, 0x00, 0xFE, 0x00, 0xF8, 0x03, 0xC0, 0x03, 0xF8, 0x03, 0x7E, 0x00, 0x3E, 0x00, 0xFE, 0x00, 0xF0, 0x03, 0xE0, 0x03, 0xFC, 0x01, 0x3E, 0x00, 0x06, 0x00,  // Code for char W
        0x09, 0x02, 0x02, 0x06, 0x03, 0x8E, 0x03, 0xFC, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0xDE, 0x03, 0x8E, 0x03, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char X
        0x09, 0x00, 0x00, 0x06, 0x00, 0x0E, 0x00, 0x3E, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x3E, 0x00, 0x0E, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char Y
        0x09, 0x00, 0x00, 0x86, 0x03, 0xC6, 0x03, 0xE6, 0x03, 0x76, 0x03, 0x3E, 0x03, 0x1E, 0x03, 0x0E, 0x03, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char Z
        0x05, 0x00, 0x00, 0xFE, 0x0F, 0xFE, 0x0F, 0x06, 0x0C, 0x06, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char [
        0x07, 0x03, 0x00, 0x0F, 0x00, 0x3C, 0x00, 0xF0, 0x00, 0xC0, 0x03, 0x00, 0x0F, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char BackSlash
        0x05, 0x00, 0x00, 0x06, 0x0C, 0x06, 0x0C, 0xFE, 0x0F, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ]
        0x06, 0x00, 0x00, 0x0C, 0x00, 0x0E, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ^
        0x08, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char _
        0x05, 0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char `
        0x07, 0xC0, 0x01, 0xF8, 0x03, 0x78, 0x03, 0x78, 0x03, 0x78, 0x01, 0xF8, 0x03, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char a
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x10, 0x03, 0x18, 0x03, 0x18, 0x03, 0xF8, 0x03, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char b
        0x07, 0x00, 0x00, 0xE0, 0x00, 0xF8, 0x03, 0x18, 0x03, 0x18, 0x03, 0xB8, 0x03, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char c
        0x08, 0xE0, 0x00, 0xF0, 0x01, 0x98, 0x03, 0x18, 0x03, 0x18, 0x03, 0x10, 0x01, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char d
        0x07, 0x40, 0x00, 0xF0, 0x01, 0xF8, 0x03, 0xD8, 0x03, 0xD8, 0x03, 0xF8, 0x03, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char e
        0x05, 0x18, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x1E, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char f
        0x08, 0xF0, 0x00, 0xF8, 0x06, 0x98, 0x0D, 0x98, 0x0D, 0x98, 0x0D, 0x90, 0x0C, 0xF8, 0x0F, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char g
        0x07, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x10, 0x00, 0x18, 0x00, 0xF8, 0x03, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char h
        0x03, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char i
        0x03, 0x00, 0x0C, 0xFE, 0x0F, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char j
        0x08, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0xE0, 0x00, 0xF0, 0x01, 0xF8, 0x03, 0x18, 0x03, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char k
        0x03, 0x00, 0x00, 0xFE, 0x03, 0xFE, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char l
        0x0C, 0x00, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x10, 0x00, 0x18, 0x00, 0xF8, 0x03, 0xF0, 0x03, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0xF8, 0x03, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00,  // Code for char m
        0x07, 0x00, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x10, 0x00, 0x18, 0x00, 0xF8, 0x03, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char n
        0x08, 0xE0, 0x00, 0xF0, 0x01, 0x98, 0x03, 0x18, 0x03, 0x18, 0x03, 0x38, 0x03, 0xF0, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char o
        0x08, 0x00, 0x00, 0xF8, 0x0F, 0xF8, 0x0F, 0x10, 0x03, 0x18, 0x03, 0x18, 0x03, 0xF8, 0x03, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char p
        0x08, 0xE0, 0x00, 0xF0, 0x01, 0x98, 0x03, 0x18, 0x03, 0x18, 0x03, 0x10, 0x01, 0xF8, 0x0F, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char q
        0x05, 0x00, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x38, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char r
        0x06, 0x20, 0x01, 0xF8, 0x03, 0x78, 0x03, 0x58, 0x03, 0xF8, 0x03, 0xD0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char s
        0x05, 0x18, 0x00, 0xFE, 0x01, 0xFE, 0x03, 0x18, 0x03, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char t
        0x07, 0x00, 0x00, 0xF8, 0x01, 0xF8, 0x03, 0x00, 0x03, 0x00, 0x01, 0xF8, 0x03, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char u
        0x08, 0x08, 0x00, 0x38, 0x00, 0xF8, 0x01, 0xE0, 0x03, 0xC0, 0x03, 0xF8, 0x01, 0x78, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char v
        0x0B, 0x08, 0x00, 0x78, 0x00, 0xF8, 0x03, 0xC0, 0x03, 0xF8, 0x03, 0x78, 0x00, 0xF8, 0x01, 0xC0, 0x03, 0xF0, 0x03, 0xF8, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char w
        0x08, 0x08, 0x02, 0x18, 0x03, 0xF8, 0x03, 0xF0, 0x01, 0xF0, 0x01, 0xB8, 0x03, 0x08, 0x03, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char x
        0x08, 0x08, 0x08, 0x38, 0x0C, 0xF8, 0x0D, 0xE0, 0x0F, 0xC0, 0x07, 0xF8, 0x03, 0x78, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char y
        0x07, 0x00, 0x03, 0x98, 0x03, 0xD8, 0x03, 0xF8, 0x03, 0x78, 0x03, 0x38, 0x03, 0x18, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char z
        0x06, 0x60, 0x00, 0x60, 0x00, 0xFC, 0x07, 0xFE, 0x0F, 0x06, 0x0C, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char {
        0x03, 0x00, 0x00, 0xFF, 0x0F, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char |
        0x06, 0x04, 0x04, 0x06, 0x0C, 0xFE, 0x0F, 0xFC, 0x07, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char }
        0x06, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char ~
        0x04, 0xFF, 0x03, 0xFF, 0x03, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Code for char 
        };




Oledmisc::Oledmisc()
{

}

void Oledmisc::screen_init()
{
    oled.write_oled(0,DC);
    oled.write_oled(0,VDDC);
    sleep_ms(1);
    Oledspi.set_freq(400000);
    Oledspi.set_mode(0, 0);
    Oledspi.assert_ss(0);
    Oledspi.transfer(0xAE);
    oled.write_oled(0,RESET);
    sleep_ms(1);
    oled.write_oled(1,RESET);

    Oledspi.transfer(0x8D);
    Oledspi.transfer(0x14);
    Oledspi.transfer(0xD9);
    Oledspi.transfer(0xF1);


    oled.write_oled(0,VBATC);
    sleep_ms(100);
    Oledspi.transfer(0xA1);
    Oledspi.transfer(0xC8);

    Oledspi.transfer(0xDA);
    Oledspi.transfer(0x20);

    Oledspi.transfer(0xAF);

}

void Oledmisc::screen_terminate()
{
    oled.write_oled(0,DC);
    Oledspi.set_freq(400000);
    Oledspi.set_mode(0, 0);
    Oledspi.assert_ss(0);
    Oledspi.transfer(0xAE);
    oled.write_oled(1,VBATC);
    sleep_ms(100);
    oled.write_oled(0,VBATC);
}

void Oledmisc::display_on()
{
    oled.write_oled(0,DC);
    Oledspi.set_freq(400000);
    Oledspi.set_mode(0, 0);
    Oledspi.assert_ss(0);
    Oledspi.transfer(0xA5);
}

void Oledmisc::display_off()
{
    oled.write_oled(0,DC);
    Oledspi.set_freq(400000);
    Oledspi.set_mode(0, 0);
    Oledspi.assert_ss(0);
    Oledspi.transfer(0xAE);
}



void Oledmisc::set_cursor(uint8_t x, uint8_t y)
{
	   oled.write_oled(0,DC);
	   Oledspi.set_mode(0, 0);
	   Oledspi.assert_ss(0);
	   Oledspi.transfer(0x00 + (x & 0x0F));
	   Oledspi.transfer(0x10 + ((x >> 4) &  0x0F));
	   Oledspi.transfer(0xB0 + y );
}

void Oledmisc::screen_clear()
{
	   for(uint8_t page = 0; page < 4; page++)
	   {
		   set_cursor(0, page);
		   for(uint8_t column = 0; column < 128; column++)
		   {
			   oled.write_oled(1,DC);
			   Oledspi.set_mode(0, 0);
			   Oledspi.assert_ss(0);
			   Oledspi.transfer(0x00);
		   }
	   }
}

void Oledmisc::screen_fill()
{
	   for(uint8_t page = 0; page < 4; page++)
	   {
		   set_cursor(0, page);
		   for(uint8_t column = 0; column < 128; column++)
		   {
			   oled.write_oled(1,DC);
			   Oledspi.set_mode(0, 0);
			   Oledspi.assert_ss(0);
			   Oledspi.transfer(0xFF);
		   }
	   }
}

void Oledmisc::print_char(char ch, uint8_t x_cord, uint8_t y_cord)
{
	int ascii_to_array_index = ch - First_char_ascii_code;
	int char_start_in_array = ascii_to_array_index * No_of_bytes_Char + 1;

	for(int j = x_cord; j < x_cord + Columns; j++)
	{
		for(int i = y_cord; i < y_cord + Char_Verticle_Pages_Required; i++)
		{
			set_cursor(j, i);
			int array_index = char_start_in_array + (j - x_cord) * Char_Verticle_Pages_Required + (i - y_cord);
			int char_btye = data2[array_index];

			oled.write_oled(1,DC);
			Oledspi.set_mode(0, 0);
			Oledspi.assert_ss(0);
			Oledspi.transfer(char_btye);
		}

	}

}

void Oledmisc::display_OLED(int PlayerCurrentHP, int stage)
{
	int numone =  PlayerCurrentHP % 10;
	char numoneout = (char) (48+numone);
	int numten = PlayerCurrentHP / 10;
	char numtenout = (char) (48+numten);

	char stagenumout = (char) (48+stage);
	sleep_ms(100);

	print_char('H', 0, 0);
	print_char('P', Columns, 0);
	print_char(':', Columns * 2, 0);
	print_char(numtenout, Columns * 3, 0);
	print_char(numoneout, Columns * 4, 0);
	print_char('/', Columns * 5, 0);
	print_char('3', Columns * 6, 0);
	print_char('6', Columns * 7, 0);



	print_char('S', 0, 2);
	print_char('t', Columns, 2);
	print_char('a', Columns * 2, 2);
	print_char('g', Columns * 3, 2);
	print_char('e', Columns * 4, 2);
	print_char(' ', Columns * 5, 2);
	print_char(stagenumout, Columns * 6, 2);
	print_char(' ', Columns * 7, 2);

}
